@model UserPageModel

<style>
    .user-page {
        overflow-y: auto;
        padding: 10px 50px 10px 50px;
        background-color: #e8e8e8;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

        .user-page > div {
            padding: 20px 50px 20px 50px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            border: 1px solid;
            border-radius: 10px;
        }


    .line-user-page {
        display: flex;
        flex-direction: row;
    }

    .label-user-page {
        width: 20%;
        float: left;
        text-align: center;
    }

    .label-text-page {
        float: left;
        width: 80%;
    }

    #userSettingsForm {
        height: 100%;
    }
</style>

<form id="userSettingsForm" data-ajax="true" action="@Url.Action("SaveUserSettings", "Home")" method="post">
    <div class="user-page">
        <div>
            @Html.HiddenFor(x => x.ID)
            <div style="width:100%">
                @Html.LabelFor(x => x.Email, new { @class = "label-user-page" })
                @Html.TextBoxFor(x => x.Email, null, new { @class = "label-text-page" })
            </div>
            <br>
            <div style="width:100%">
                @Html.LabelFor(x => x.Login, new { @class = "label-user-page" })
                @Html.TextBoxFor(x => x.Login, null, new { @class = "label-text-page" })
            </div>
        </div>
        <br>
        <div>
            <div style="width:100%">
                @Html.LabelFor(x => x.Name, new { @class = "label-user-page" })
                @Html.TextBoxFor(x => x.Name, null, new { @class = "label-text-page" })
            </div>
        </div>
        <br>
        <div>
            <div style="width:100%">
                @Html.LabelFor(x => x.ChangePassword, new { @class = "label-user-page", type = "password" })
                @Html.TextBoxFor(x => x.ChangePassword, null, new { @class = "label-text-page", type = "password" })
            </div>
            <br>
            <div style="width:100%">
                @Html.LabelFor(x => x.ConfirmedPassword, new { @class = "label-user-page", type = "password" })
                @Html.TextBoxFor(x => x.ConfirmedPassword, null, new { @class = "label-text-page", type = "password" })
            </div>
        </div>
        <br>
        <div>
            <div style="width:100%">
                @Html.LabelFor(x => x.VerifyPassword, new { @class = "label-user-page", type = "password" })
                @Html.TextBoxFor(x => x.VerifyPassword, null, new { @class = "label-text-page", type = "password" })
            </div>
        </div>
        <br>
        <input type="button" id="saveUserSettings" class="btn btn-submit btn-success" value="Save" />
    </div>
</form>
