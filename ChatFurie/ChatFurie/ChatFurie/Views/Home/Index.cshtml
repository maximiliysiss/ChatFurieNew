@{
    ViewData["Title"] = "Home Page";
}
@{
    int userID = Convert.ToInt32(User.Claims.ToList()[1].Value);
    ChatContext chatContext = new ChatContext();
    var user = chatContext.Users.Find(userID);
}

<style>
    .choice-modal {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 5% 10% 5% 10%;
        font-size: 14pt;
    }

</style>

<div class="modal fade" id="modalWindow" tabindex="-1" role="dialog" aria-labelledby="ModalWindow" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div id="modalContent" class="modal-content">
        </div>
    </div>
</div>

<div class="modal fade" id="choiceModal" tabindex="-1" role="dialog" aria-labelledby="choiceModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content choice-modal">
            Are you sure?
            <div class="modal-footer">
                <input class="btn btn-success" value="Yes" id="choiceModal-Yes" />
                <input class="btn btn-danger" data-dismiss="modal" value="No" id="choiceModal-No" />
            </div>
        </div>
    </div>
</div>

<div class="f-column column">
    <div class="user-info">
        <img src="~/images/DefaultUserImg.png" class="img40" />
        <span>@Html.StringLengthValidate(user.Login)</span>
        <img src="~/images/condition-on.jpg" class="img10" />
    </div>
    <div class="search">
        <input id="search-input" type="text" />
    </div>
    <div class="tabs-line">
        <span name="list-output" class="tab-header tab-header-active">Conversations</span>
        <span name="Notifications" class="tab-header">
            <span>
                <span style="display:none" class="tab-header-img"></span>
            </span>
            Notifications
        </span>
    </div>
    <div id="list-output" class="list-output">
    </div>
    <div id="Notifications" class="list-output" style="display:none">
    </div>
</div>
<div id="s-column" class="s-column column">
    <img style="width:100%" />
</div>


<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.1/js/toastr.js"></script>
<script>

    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": 300,
        "hideDuration": 1000,
        "timeOut": 5000,
        "extendedTimeOut": 1000,
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }

    // On Start page
    $(function () {

        var modalWindow = $("#modalWindow");
        var modalWindowContent = $("#modalContent");

        var modalChoice = $('#choiceModal');
        var modalChoiceYes = $('#choiceModal-Yes');
        var modalChoiceNo = $('#choiceModal-No');


        $(modalWindow).on("hidden.bs.modal", function () { isModalOpen = false; });
        $(modalChoice).on("hidden.bs.modal", function () { isModalOpen = false; });

        var isModalOpen = false;


        function GetStartPage() {
            $("#s-column").html('<img style="width:100%" />');
        }

        function LoadConversations() {
            AjaxPost({ "user": "@userID" }, "@Url.Action("GetConversations","Home")", function (e) {
                $("#list-output").html(e);
                $(".conversation").click(function () {
                    OpenConversation($(this).attr("id"));
                });
            });
        }

        function LoadNotifications() {
            AjaxPost({ "user": "@userID" }, "@Url.Action("GetNotifications","Home")", function (e) {
                $("#Notifications").html(e);
                $(".notification").click(function () {
                    OpenNotification($(this).attr("id"));
                });
                if ($('#notificationCount').val() > 0) {
                    $('.tab-header-img').css('display', 'flex');
                    $('.tab-header-img').html($('#notificationCount').val());
                } else {
                    $('.tab-header-img').css('display', 'none');
                }
            });
        }

        LoadConversations();
        LoadNotifications();

        function AddUserToCoversation(conversation) {
            if (isModalOpen)
                return;
            isModalOpen = true;
            AjaxPost({ find: "", user: "@userID" }, "@Url.Action("FindOnlyFriends")", function (e) {
                $(modalWindowContent).html(e);
                $(modalWindow).modal("show");
            });
        }


        function OpenNotification(id) {
            AjaxPost({ "user": "@userID", "notification": id }, "@Url.Action("OpenNotification","Home")",
                function (e) {
                    $("#s-column").html(e);
                    $("#acceptFriend").click(function () {
                        var id = $(this).attr("name");
                        AjaxPost({ "user": "@userID", "notification": id }, "@Url.Action("AcceptFriend","Home")",
                            function (e) {
                                OpenConversation(e);
                                LoadNotifications();
                                LoadConversations();
                            });
                    });
                    $("#declineFriend").click(function () {
                        var id = $(this).attr("name");
                        AjaxPost({ "user": "@userID", "notification": id }, "@Url.Action("DeclineFriend","Home")",
                            function (e) {
                                GetStartPage();
                                LoadNotifications();
                            });
                    });
                });
        }

        // Searching conversations and friends
        $('#search-input').keyup(function () {
            var text = $(this).val().trim();
            if (text.length === 0) {
                LoadConversations();
            }
            else {
                AjaxPost({ "find": text, "user": "@userID" },
                    "@Url.Action("FindResult", "Home")",
                    function (e) {
                        $('#list-output').html(e);
                        $('.contact-find').click(function () { OpenContact($(this).attr("id")); });
                    });
            }
        });

        function OpenContact(id) {
            AjaxPost({ "user": "@userID", "another": id },
            "@Url.Action("OpenContact","Home")",
            function (e) {
                $('.s-column').html(e);
                InitOpenContact();
            });
        }

        function InitOpenContact() {
            $("#deleteFriend").click(function () {
            });
            $("#addFriend").click(function () {
                var nUser = $(this).attr("name");
                AjaxPost({ "user": "@userID", "newFriend": nUser },
                    "@Url.Action("AddFriend","Home")", function (e) {
                        if (!e)
                            toastr["error"]("Unreport exception");
                        else {
                            toastr["success"]("Success adding");
                            OpenContact(nUser);
                        }
                    });
            });
        }

        function LoadInfoAboutConversation(conversation, ignore = false) {
            if (isModalOpen && !ignore)
                return;
            var id = $(conversation).attr("id");
            AjaxPost({ "user": "@userID", "conversation": id }, "@Url.Action("ConversationInfo")",
                function (e) {
                    $(modalWindowContent).html(e);
                    $('.deleteFromConversation').click(function () {
                        var idUser = $(this).attr("id");
                        OpenChoiceModal(function () {
                            AjaxPost({ conversation: id, user: idUser }, "@Url.Action("DeleteUserFromConversation")", function (e) {
                                toastr[e ? "success" : "error"]("Deleting " + (e ? "success" : "error"));
                                LoadInfoAboutConversation(conversation, true);
                            });
                        }, true);
                    });

                    $('.setAdminUser').click(function () {
                        var idUser = $(this).attr('id');
                        OpenChoiceModal(function () {
                            AjaxPost({ conversation: id, user: idUser }, "@Url.Action("SetUserAdmin")", function (e) {
                                toastr[e ? "success" : "error"]("Set user " + (e ? "success" : "error"));
                                LoadInfoAboutConversation(conversation, true);
                            });
                        },true);
                    })
                    $(modalWindow).modal("show");
                    isModalOpen = true;
                });
        }

        function OpenConversation(id) {
            AjaxPost({ "user": "@userID", "conversation": id }, "@Url.Action("OpenConversation", "Home")",
                function (e) {
                    $("#s-column").html(e);
                    /// Realize

                    $(".header-info").click(function () {
                        LoadInfoAboutConversation(this);
                    });

                    $('#addUserToConversation').click(function () {
                        AddUserToCoversation(this);
                    });

                    $('#outFromConversation').click(function () {
                        var id = $(this).attr('name');
                        OpenChoiceModal(function () {
                            AjaxPost({ conversation: id, user: "@userID" }, "@Url.Action("DeleteUserFromConversation")", function (e) {
                                GetStartPage();
                                LoadConversations();
                            });
                        });
                    });
                });
        }

        function OpenChoiceModal(successFunction, ignore = false) {
            if (isModalOpen && !ignore)
                return;
            isModalOpen = true;
            $(modalChoiceYes).click(function () {
                successFunction();
                $(modalChoice).modal('hide');
            });
            $(modalChoice).modal("show");
        }

        /// Переписать под универсал!
        $('.tab-header').click(function () {
            var getElementActive = $('.tab-header.tab-header-active').first();
            var idActive = $(getElementActive).attr("name");
            var id = $(this).attr("name");
            if (this !== getElementActive) {
                $(this).attr("class", "tab-header tab-header-active");
                $('#' + id).css("display", "block");
                $(getElementActive).attr("class", "tab-header");
                $('#' + idActive).css("display","none");
            }
        });

    });


    function AjaxPost(data, url, success) {
        $.ajax({
            url: url,
            data: data,
            method: "POST",
            success: success,
            error: function (jqXHR, textStatus, errorThrown) {
                toastr["error"](jqXHR.responseText);
            }
        });
    }

    function AjaxGet(data, url, success) {
        $.ajax({
            url: url,
            data: data,
            method: "GET",
            success: success,
            error: function (error) {

            }
        });
    }

</script>


